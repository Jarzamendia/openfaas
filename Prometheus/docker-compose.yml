version: '3.3'

services:

  prometheus:
    image: prom/prometheus:v2.11.0
    environment:
        no_proxy: "gateway"
    volumes:
        - /swarm/prometheus/prometheus.yml:/config/prometheus.yml
        - /swarm/prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
        - /swarm/prometheus/data/:/prometheus
    command:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - '--storage.tsdb.path=/prometheus'
    networks:
        - function_net
        - proxy_net
    deploy:
        placement:
            constraints:
                - "node.role == manager"
                - "node.platform.os == linux"
        resources:
            limits:
                memory: 500M
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.prometheus_router.rule=Host(`prometheus.docker.internal`)"
            - "traefik.http.routers.prometheus_router.service=prometheus_service"
            - "traefik.http.routers.prometheus_router.entrypoints=http,https"
            - "traefik.http.services.prometheus_service.loadbalancer.server.port=9090"

  alertmanager:
    image: prom/alertmanager:v0.18.0
    environment:
        no_proxy: "gateway"
    volumes:
        - /swarm/alertmanager/alertmanager.yml:/alertmanager.yml
        - /swarm/alertmanager/data/:/alertmanager
    command:
        - "--config.file=/alertmanager.yml"
        - "--storage.path=/alertmanager"
    networks:
        - function_net
        - proxy_net
    deploy:
        resources:
            limits:
                memory: 50M
        placement:
            constraints:
                - "node.role == manager"
                - "node.platform.os == linux"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.alertmanager_router.rule=Host(`alertmanager.docker.internal`)"
            - "traefik.http.routers.alertmanager_router.service=alertmanager_service"
            - "traefik.http.routers.alertmanager_router.entrypoints=http,https"
            - "traefik.http.services.alertmanager_service.loadbalancer.server.port=9093"
    secrets:
        - basic-auth-password

  grafana:
    image: grafana/grafana
    environment:
        GF_SERVER_ROOT_URL: grafana.docker.internal
        GF_SECURITY_ADMIN_USER: admin
        GF_SECURITY_ADMIN_PASSWORD: admin
    networks:
      - proxy_net
    volumes:
        - /swarm/grafana/:/var/lib/grafana
    deploy:
      mode: replicated
      placement:
        constraints:
          - "node.platform.os == linux"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana_router.rule=Host(`grafana.docker.internal`)"
        - "traefik.http.routers.grafana_router.service=grafana_service"
        - "traefik.http.routers.grafana_router.entrypoints=http,https"
        - "traefik.http.services.grafana_service.loadbalancer.server.port=3000"

networks:
  db_net:
    external: true
  proxy_net:
    external: true
  function_net:
    external: true

secrets:
    basic-auth-user:
        external: true
    basic-auth-password:
        external: true